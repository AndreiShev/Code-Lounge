server:
  port: 0

spring:
  application:
    name: social-network-notification
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
  datasource:
#    url: ${JDBC_DATABASE_URL:jdbc:postgresql://localhost:5432/notification_db}
    url: jdbc:postgresql://89.111.174.153:5432/social-network-notification
    username: ${JDBC_DATABASE_USERNAME:postgres}
    password: ${JDBC_DATABASE_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
    hikari:
      schema: ws_notification
      connection-init-sql: create schema if not exists ws_notification
      connection-timeout: 10000
  liquibase:
    enabled: true
    change-log: classpath:db/changelog/db.changelog-master.yml
    default-schema: ws_notification
    liquibase-schema: ws_notification
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: none
  kafka:
    bootstrap-servers: 89.111.174.153:9093
#    bootstrap-servers: localhost:9093

app:
  integration:
    kafka:
      notification:
        kafkaNotificationTopic: notification-topic
        kafkaMessageGroupId: kafka-notification-message-group-id
      account:
        kafkaNewAccountTopic: new-account-topic
        kafkaMessageGroupId: kafka-message-group-id

    account-service:
      base-url: http://89.111.174.153:8080/

eureka:
  client:
    enabled: true
    service-url:
      #      defaultZone: http://localhost:8761/eureka/
      defaultZone: http://89.111.174.153:8761/eureka/


# http://89.111.174.153:8080/ - front
# http://89.111.174.153:8081/ - kafka ui
# http://89.111.174.153:8761/dashboard/


